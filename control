#!/usr/bin/env python3
import sys
import traceback
import os


def main(argv: list) -> None:
  try:
    services = [
        'gateway',
        'pyabs',
        'pytxn',
        'phpm',
        'pyadmin',
        'rrcc',
        'pyco',
        'warc',
        'compy',
    ]
    # todo: adminreports bg start
    if argv[1] in ['start:all', 'start:services']:
      os.system('brew services start mysql')
      for service in services:
        if service in ['phpm']:
          os.chdir(f'../{service}')
          os.system('signal dev:start > /dev/null 2>&1 &')
          continue
        if service in ['rrcc', 'warc']:
          os.chdir(f'../{service}')
          os.system('signal run:dev:startbg')
          continue
        os.chdir(f'../{service}')
        os.system('signal dev:start')
      if argv[1] in ['start:all']:
        os.chdir(f'../nativer')
        os.system('adb kill-server')
        os.system('adb start-server')
        os.system('./var/ios_start.sh')
      return
    if argv[1] in ['stop:all', 'stop:services']:
      if argv[1] in ['stop:all']:
        os.system('adb kill-server')
      os.system('brew services stop mysql')
      for service in services:
        if service in ['phpm']:
          os.chdir(f'../{service}')
          os.system('signal dev:stop > /dev/null 2>&1 &')
          continue
        os.chdir(f'../{service}')
        os.system('signal dev:stop')
      return
    raise Exception('Command not found')
  except Exception as ex:
    print(ex)
    traceback.format_exc()


main(sys.argv)
